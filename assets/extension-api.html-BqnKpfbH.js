import{_ as s,c as a,a as e,o as t}from"./app-BUQix1Pk.js";const p={};function c(l,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="扩展-api" tabindex="-1"><a class="header-anchor" href="#扩展-api"><span>扩展 API</span></a></h1><h2 id="扩展点注解" tabindex="-1"><a class="header-anchor" href="#扩展点注解"><span>扩展点注解</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">MExtension</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span> <span class="token function">extPointId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">String</span> <span class="token function">description</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> <span class="token function">priority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token number">100</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="扩展包抽象" tabindex="-1"><a class="header-anchor" href="#扩展包抽象"><span>扩展包抽象</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">MosaicExtPackage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">MosaicCube</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">ExtensionPackageApi</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token class-name">T</span> mosaicCube<span class="token punctuation">;</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initCube</span><span class="token punctuation">(</span><span class="token class-name">MosaicCube</span> mosaicCube<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>mosaicCube <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> mosaicCube<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="返回值约定" tabindex="-1"><a class="header-anchor" href="#返回值约定"><span>返回值约定</span></a></h2><ul><li>返回 MosaicResult：框架原样使用（并以 default 名再存一份），调用方可按 resName + itemName 拿到命名结果；</li><li>返回普通类型：框架封装为 MosaicResult 并以 default 命名；</li><li>返回 void/MosaicVoid：表示无返回。</li></ul>`,7)]))}const o=s(p,[["render",c]]),u=JSON.parse('{"path":"/api/extension-api.html","title":"扩展 API","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1755189626000,"contributors":[{"name":"1204992313@qq.com","username":"","email":"1204992313@qq.com","commits":1}],"changelog":[{"hash":"11b27805a6c9f4dfe846e254cfdae8ab191c7569","time":1755189626000,"email":"1204992313@qq.com","author":"1204992313@qq.com","message":"build"}]},"filePathRelative":"api/extension-api.md"}');export{o as comp,u as data};
