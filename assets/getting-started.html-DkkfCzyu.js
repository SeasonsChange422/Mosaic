import{_ as s,c as a,a as t,o as p}from"./app-BUQix1Pk.js";const e={};function o(c,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始"><span>快速开始</span></a></h1><p>本文展示如何在宿主中注册 Slot、安装 Cube，并执行扩展点。</p><h2 id="_1-注册槽位-slot" tabindex="-1"><a class="header-anchor" href="#_1-注册槽位-slot"><span>1. 注册槽位 Slot</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>tml<span class="token punctuation">.</span>mosaic<span class="token punctuation">.</span>core<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>guid<span class="token punctuation">.</span></span><span class="token class-name">DotNotationId</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>tml<span class="token punctuation">.</span>mosaic<span class="token punctuation">.</span>slot<span class="token punctuation">.</span></span><span class="token class-name">Slot</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>tml<span class="token punctuation">.</span>mosaic<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">GenericSlotManager</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>tml<span class="token punctuation">.</span>mosaic<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">SlotManager</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">SlotManager</span> slotManager <span class="token operator">=</span> <span class="token class-name">GenericSlotManager</span><span class="token punctuation">.</span><span class="token function">manager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创建槽位并注册</span></span>
<span class="line"><span class="token class-name">Slot</span> slot <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Slot</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DotNotationId</span><span class="token punctuation">(</span><span class="token string">&quot;demo.slot&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">slotManager<span class="token punctuation">.</span><span class="token function">registerSlot</span><span class="token punctuation">(</span>slot<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-安装-cube-到-slot" tabindex="-1"><a class="header-anchor" href="#_2-安装-cube-到-slot"><span>2. 安装 Cube 到 Slot</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>tml<span class="token punctuation">.</span>mosaic<span class="token punctuation">.</span>core<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>guid<span class="token punctuation">.</span></span><span class="token class-name">GUID</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>tml<span class="token punctuation">.</span>mosaic<span class="token punctuation">.</span>slot<span class="token punctuation">.</span></span><span class="token class-name">Slot</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">Slot<span class="token punctuation">.</span>SetupCubeInfo</span> info <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Slot<span class="token punctuation">.</span>SetupCubeInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">info<span class="token punctuation">.</span><span class="token function">setCubeId</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GUID</span><span class="token punctuation">(</span><span class="token string">&quot;your.cube.id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// 目标 Cube ID</span></span>
<span class="line">info<span class="token punctuation">.</span><span class="token function">setExPackageId</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GUID</span><span class="token punctuation">(</span><span class="token string">&quot;your.ex.package&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 扩展包 ID（AngelCube 可为空）</span></span>
<span class="line">info<span class="token punctuation">.</span><span class="token function">setExPointId</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GUID</span><span class="token punctuation">(</span><span class="token string">&quot;your.ex.point&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 扩展点 ID（AngelCube 可为空）</span></span>
<span class="line">info<span class="token punctuation">.</span><span class="token function">setResName</span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment">// 结果命名（需在扩展点返回结构中存在）</span></span>
<span class="line">info<span class="token punctuation">.</span><span class="token function">setConfigId</span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token comment">// 配置 ID（同一 Cube 可按配置隔离）</span></span>
<span class="line"></span>
<span class="line">slotManager<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span>slot<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> info<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-执行调用" tabindex="-1"><a class="header-anchor" href="#_3-执行调用"><span>3. 执行调用</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>tml<span class="token punctuation">.</span>mosaic<span class="token punctuation">.</span>actuator<span class="token punctuation">.</span></span><span class="token class-name">CubeActuatorProxy</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>tml<span class="token punctuation">.</span>mosaic<span class="token punctuation">.</span>cube<span class="token punctuation">.</span>factory<span class="token punctuation">.</span></span><span class="token class-name">ClassPathCubeContext</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>tml<span class="token punctuation">.</span>mosaic<span class="token punctuation">.</span>cube<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">CubeContext</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>tml<span class="token punctuation">.</span>mosaic<span class="token punctuation">.</span>slot<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">SlotManager</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 初始化上下文与执行代理</span></span>
<span class="line"><span class="token class-name">CubeContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathCubeContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">CubeActuatorProxy</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CubeActuatorProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">proxy<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> slotManager<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 执行（同步，按扩展点签名传参）</span></span>
<span class="line"><span class="token class-name">Object</span> result <span class="token operator">=</span> proxy<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>slot<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;arg1&quot;</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：</p><ul><li>对于 AngelCube（守护型），execute 会启动/复用守护任务，停止请调用 proxy.stop(slotId)。</li><li>args 需要与扩展点的方法签名参数一致。</li></ul>`,10)]))}const i=s(e,[["render",o]]),u=JSON.parse('{"path":"/guide/getting-started.html","title":"快速开始","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1755189626000,"contributors":[{"name":"1204992313@qq.com","username":"","email":"1204992313@qq.com","commits":1}],"changelog":[{"hash":"11b27805a6c9f4dfe846e254cfdae8ab191c7569","time":1755189626000,"email":"1204992313@qq.com","author":"1204992313@qq.com","message":"build"}]},"filePathRelative":"guide/getting-started.md"}');export{i as comp,u as data};
