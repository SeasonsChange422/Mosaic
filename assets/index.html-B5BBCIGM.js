import{_ as s,c as a,a as t,o as e}from"./app-BNuLpz20.js";const p={};function l(c,n){return e(),a("div",null,n[0]||(n[0]=[t(`<h2 id="什么是-mosaic-framework" tabindex="-1"><a class="header-anchor" href="#什么是-mosaic-framework"><span>什么是 Mosaic Framework？</span></a></h2><p>Mosaic Framework 是一个基于插件化架构的Java模块化框架，旨在帮助开发者构建可扩展、可维护的模块化应用系统。</p><h3 id="核心特性" tabindex="-1"><a class="header-anchor" href="#核心特性"><span>核心特性</span></a></h3><ul><li><strong>插件化架构</strong>: 基于Cube概念的模块化设计</li><li><strong>扩展点机制</strong>: 注解驱动的扩展点系统</li><li><strong>事件驱动</strong>: 完整的事件系统</li><li><strong>配置管理</strong>: 灵活的配置系统</li><li><strong>生命周期管理</strong>: 完整的插件生命周期</li></ul><h3 id="快速体验" tabindex="-1"><a class="header-anchor" href="#快速体验"><span>快速体验</span></a></h3><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.github.timemachinelab<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mosaic-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@MCube</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;示例插件&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;这是一个示例插件&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExampleCube</span> <span class="token keyword">extends</span> <span class="token class-name">MosaicCube</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;插件初始化成功！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">cubeId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;example.cube&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7)]))}const o=s(p,[["render",l]]),u=JSON.parse('{"path":"/","title":"","lang":"zh-CN","frontmatter":{"home":true,"heroImage":"/logo.png","heroText":"Mosaic Framework","tagline":"基于插件化架构的Java模块化框架","actionText":"快速开始 →","actionLink":"/guide/getting-started","features":[{"title":"🧩 插件化架构","details":"基于Cube概念的模块化设计，支持插件的动态加载和管理"},{"title":"🔌 扩展点机制","details":"通过注解驱动的扩展点系统，实现插件间的松耦合交互"},{"title":"📡 事件驱动","details":"完整的事件系统支持插件间的异步通信"},{"title":"⚙️ 配置管理","details":"灵活的配置系统，支持类型验证和默认值"},{"title":"🔄 生命周期管理","details":"完整的插件生命周期管理（初始化、启动、停止、销毁）"},{"title":"🏗️ 多实例支持","details":"支持单例和多例插件模式"}],"footer":"MIT Licensed | Copyright © 2024 Mosaic Framework"},"git":{"updatedTime":1755190092000,"contributors":[{"name":"1204992313@qq.com","username":"","email":"1204992313@qq.com","commits":1}],"changelog":[{"hash":"c06c8a3e58263cf6ab7fa48151b9aaa2c3c0f5ee","time":1755190092000,"email":"1204992313@qq.com","author":"1204992313@qq.com","message":"docs(config): 添加public路径配置以支持静态资源"}]},"filePathRelative":"README.md"}');export{o as comp,u as data};
