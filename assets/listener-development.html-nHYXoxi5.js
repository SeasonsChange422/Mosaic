import{_ as s,c as a,a as e,o as p}from"./app-BNuLpz20.js";const t={};function c(l,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="开发监听器" tabindex="-1"><a class="header-anchor" href="#开发监听器"><span>开发监听器</span></a></h1><h2 id="模板" tabindex="-1"><a class="header-anchor" href="#模板"><span>模板</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>tml<span class="token punctuation">.</span>mosaic<span class="token punctuation">.</span>core<span class="token punctuation">.</span>event<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">MosaicEvent</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>tml<span class="token punctuation">.</span>mosaic<span class="token punctuation">.</span>core<span class="token punctuation">.</span>event<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">SelectiveMosaicEventListener</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyListener</span> <span class="token keyword">extends</span> <span class="token class-name">SelectiveMosaicEventListener</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">MosaicEvent</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">getListenedEventTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token comment">/* 某事件类 */</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onSelectiveEvent</span><span class="token punctuation">(</span><span class="token class-name">MosaicEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">when</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> <span class="token comment">/* 某事件类 */</span> <span class="token punctuation">,</span> e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// handle</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getListenerName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;MyListener&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：</p><ul><li>对 AngelCube，监听器注册会在 init 时自动完成。</li></ul>`,5)]))}const i=s(t,[["render",c]]),u=JSON.parse('{"path":"/plugin/listener-development.html","title":"开发监听器","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1755190092000,"contributors":[{"name":"1204992313@qq.com","username":"","email":"1204992313@qq.com","commits":1}],"changelog":[{"hash":"c06c8a3e58263cf6ab7fa48151b9aaa2c3c0f5ee","time":1755190092000,"email":"1204992313@qq.com","author":"1204992313@qq.com","message":"docs(config): 添加public路径配置以支持静态资源"}]},"filePathRelative":"plugin/listener-development.md"}');export{i as comp,u as data};
